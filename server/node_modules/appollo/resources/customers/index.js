import { createCustomer } from "./createCustomer.js";
import { deleteCustomer } from "./deleteCustomer.js";
import { getCustomer } from "./getCustomer.js";
import { getCustomers } from "./getCustomers.js";
import { updateCustomer } from "./updateCustomer.js";

class Customers {
    constructor() {

    }

    async getCustomers(merchantId, limit, page) {
        if (!this.checkTokenExpiry()) {
            await this.getAccessToken()
        }
        const token = this.token.access_token

        const customers = await getCustomers({ merchantId, token, limit, page })
        return customers
    }

    async getCustomer(merchantId, customerId) {
        if (!this.checkTokenExpiry()) {
            await this.getAccessToken()
        }
        const token = this.token.access_token

        const customer = await getCustomer({ merchantId, customerId, token })
        return customer
    }

    async createCustomer(merchantId, payload) {
        if (!this.checkTokenExpiry()) {
            await this.getAccessToken()
        }
        const token = this.token.access_token

        const customer = await createCustomer({ merchantId, payload, token })
        return customer
    }

    async updateCustomer(merchantId, payload, customerId) {
        if (!this.checkTokenExpiry()) {
            await this.getAccessToken()
        }
        const token = this.token.access_token

        const customer = await updateCustomer({ customerId, payload, merchantId, token })
        return customer
    }

    async deleteCustomer(merchantId, customerId) {
        if (!this.checkTokenExpiry()) {
            await this.getAccessToken()
        }
        const token = this.token.access_token

        const customer_id = await deleteCustomer({ merchantId, customerId, token })
        return customer_id
    }
}

export default Customers